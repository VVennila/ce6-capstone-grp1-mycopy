name: Deploy to Amazon ECS

on:
  push:
    branches:
      - dev
      - stage
      - prod

env:
  AWS_REGION: ap-southeast-1  # Set your AWS region here

jobs:
  deploy:
    name: Deploy to ${{ github.ref_name }} environment
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{ github.ref_name }}-ecr-repo:$IMAGE_TAG -t $ECR_REGISTRY/${{ github.ref_name }}-ecr-repo:latest .
          docker push $ECR_REGISTRY/${{ github.ref_name }}-ecr-repo -a
          echo "image=$ECR_REGISTRY/${{ github.ref_name }}-ecr-repo:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ github.ref_name }}-task-def --query taskDefinition > task-definition.json

      - name: Update ECS Task Definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ github.ref_name }}-ecs-container
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS Task Definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ github.ref_name }}-service
          cluster: ${{ github.ref_name }}-cluster
          wait-for-service-stability: true
